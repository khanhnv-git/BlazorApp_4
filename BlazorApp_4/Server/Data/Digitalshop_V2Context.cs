// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BlazorApp_4.Server;

namespace BlazorApp_4.Server.Data
{
    public partial class Digitalshop_V2Context : DbContext
    {
        public Digitalshop_V2Context()
        {
        }

        public Digitalshop_V2Context(DbContextOptions<Digitalshop_V2Context> options)
            : base(options)
        {
        }

        public virtual DbSet<TblDeviceTypes> TblDeviceTypes { get; set; }
        public virtual DbSet<TblDeviceUsage> TblDeviceUsage { get; set; }
        public virtual DbSet<TblDevices> TblDevices { get; set; }
        public virtual DbSet<VGetAllDevices> VGetAllDevices { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TblDeviceTypes>(entity =>
            {
                entity.HasKey(e => e.Typeid);

                entity.ToTable("tblDeviceTypes");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Shortname)
                    .HasColumnName("shortname")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TblDeviceUsage>(entity =>
            {
                entity.ToTable("tblDeviceUsage");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Assigneduserid).HasColumnName("assigneduserid");

                entity.Property(e => e.Deviceid).HasColumnName("deviceid");

                entity.Property(e => e.Endtime)
                    .HasColumnName("endtime")
                    .HasColumnType("date");

                entity.Property(e => e.Historynote)
                    .HasColumnName("historynote")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IsActive)
                    .HasColumnName("isActive")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Starttime)
                    .HasColumnName("starttime")
                    .HasColumnType("date");
            });

            modelBuilder.Entity<TblDevices>(entity =>
            {
                entity.HasKey(e => e.Deviceid);

                entity.ToTable("tblDevices");

                entity.Property(e => e.Deviceid).HasColumnName("deviceid");

                entity.Property(e => e.IsAvailable).HasColumnName("isAvailable");

                entity.Property(e => e.IsRemoved).HasColumnName("isRemoved");

                entity.Property(e => e.Labelid)
                    .HasColumnName("labelid")
                    .HasMaxLength(10);

                entity.Property(e => e.Macaddress)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Model)
                    .HasColumnName("model")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.Purchasedate)
                    .HasColumnName("purchasedate")
                    .HasColumnType("date");

                entity.Property(e => e.Typeid).HasColumnName("typeid");
            });

            modelBuilder.Entity<VGetAllDevices>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("vGetAllDevices");

                entity.Property(e => e.Deviceid).HasColumnName("deviceid");

                entity.Property(e => e.IsAvailable).HasColumnName("isAvailable");

                entity.Property(e => e.IsRemoved).HasColumnName("isRemoved");

                entity.Property(e => e.Labelid)
                    .HasColumnName("labelid")
                    .HasMaxLength(10);

                entity.Property(e => e.Macaddress)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Model)
                    .HasColumnName("model")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.Purchasedate)
                    .HasColumnName("purchasedate")
                    .HasColumnType("date");

                entity.Property(e => e.Typeid).HasColumnName("typeid");

                entity.Property(e => e.Typename)
                    .HasColumnName("typename")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}