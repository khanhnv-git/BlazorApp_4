@using BlazorApp_4.Server
@inject HttpClient client
@inject IJSRuntime js

@if (isOpen)
{
    <div id="modal-AddandEdit" class="Polaris-Modal-Dialog__Container" data-polaris-layer="true" data-polaris-overlay="true">

        <div class="Polaris-Modal-Dialog__Modal" id="add-edit-form">
            <DeviceForm device="@device" OnvalidSubmit="@CreateDevice" CloseModal="@CloseModal"></DeviceForm>
        </div>

    </div>
    <div class="Polaris-Backdrop"></div>
}


@code {
    [Parameter] public int deviceID { get; set; }
    [Parameter] public bool isOpen { get; set; }
    TblDevices device = new TblDevices();
    [Parameter] public EventCallback<bool> CloseForm { get; set; }
    public void CreateDevice()
    {

    }
    protected async override Task OnParametersSetAsync() {
        if (deviceID > 0)
        {
            device = await client.GetFromJsonAsync<TblDevices>($"devices/{deviceID}");
        }
        else {
            device = new TblDevices();
        }

    }
    public void CloseModal()
    {
        isOpen = false;
        CloseForm.InvokeAsync(isOpen);
    }
}
